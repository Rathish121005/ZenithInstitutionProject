# Generated by Django 3.1.12 on 2025-07-21 15:48

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('student', 'Student'), ('parent', 'Parent'), ('tutor', 'Tutor')], max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Admission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100)),
                ('DOB', models.DateField(verbose_name='Date of Birth')),
                ('Class', models.CharField(choices=[('9th', '9th'), ('10th', '10th'), ('11th', '11th'), ('12th', '12th')], max_length=10)),
                ('Course', models.CharField(blank=True, choices=[('Biomaths', 'Biomaths'), ('Computer Science', 'Computer Science'), ('Arts', 'Arts'), ('Pure Science', 'Pure Science'), ('Commerce', 'Commerce')], max_length=50, null=True)),
                ('MotherName', models.CharField(max_length=100)),
                ('FatherName', models.CharField(max_length=100)),
                ('SchoolName', models.CharField(max_length=200)),
                ('Address', models.TextField()),
                ('Number', models.CharField(max_length=10)),
                ('Email', models.EmailField(blank=True, max_length=254, null=True)),
                ('termsCheck', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('message', models.TextField()),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100)),
                ('DOB', models.DateField(verbose_name='Date of Birth')),
                ('Age', models.PositiveIntegerField()),
                ('Gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10)),
                ('Class', models.CharField(choices=[('9th', '9th'), ('10th', '10th'), ('11th', '11th'), ('12th', '12th')], max_length=10)),
                ('Group', models.CharField(blank=True, choices=[('Biomaths', 'Biomaths'), ('Computer Science', 'Computer Science'), ('Arts', 'Arts'), ('Pure Science', 'Pure Science')], max_length=50, null=True)),
                ('SchoolName', models.CharField(max_length=200)),
                ('Email', models.EmailField(blank=True, max_length=254, null=True)),
                ('PhoneNumber', models.CharField(max_length=15)),
                ('StudentPhoto', models.ImageField(blank=True, null=True, upload_to='student_photos/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tutor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100)),
                ('Subject', models.CharField(max_length=100)),
                ('Email', models.EmailField(max_length=254)),
                ('PhoneNumber', models.CharField(max_length=15)),
                ('TutorPhoto', models.ImageField(blank=True, null=True, upload_to='tutor_photos/')),
                ('AssignedClass', models.CharField(default='Not Assigned', max_length=50)),
                ('UserId', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tutor_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TestResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_name', models.CharField(max_length=100)),
                ('subject', models.CharField(max_length=100)),
                ('marks', models.IntegerField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.student')),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TestName', models.CharField(default='Test Name', max_length=100)),
                ('Subject', models.CharField(default='Subject Name', max_length=100)),
                ('Marks', models.IntegerField()),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.student')),
            ],
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100)),
                ('DOB', models.DateField(verbose_name='Date of Birth')),
                ('Age', models.PositiveIntegerField()),
                ('Gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10)),
                ('Class', models.CharField(choices=[('9th', '9th'), ('10th', '10th'), ('11th', '11th'), ('12th', '12th')], max_length=10)),
                ('Group', models.CharField(blank=True, choices=[('Biomaths', 'Biomaths'), ('Computer Science', 'Computer Science'), ('Arts', 'Arts'), ('Pure Science', 'Pure Science')], max_length=50, null=True)),
                ('SchoolName', models.CharField(max_length=200)),
                ('Email', models.EmailField(blank=True, max_length=254, null=True)),
                ('PhoneNumber', models.CharField(max_length=15)),
                ('StudentPhoto', models.ImageField(blank=True, null=True, upload_to='student_photos/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='parent', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Mark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Subject', models.CharField(default='Subject Name', max_length=100)),
                ('Marks', models.IntegerField()),
                ('TestName', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.test')),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('submitted_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TestMark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_name', models.CharField(max_length=100)),
                ('subject', models.CharField(max_length=100)),
                ('mark', models.FloatField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.student')),
            ],
            options={
                'unique_together': {('student', 'test_name', 'subject')},
            },
        ),
    ]
